#!/usr/bin/env bash

printf 'What is the name of your new Go app? '
read APP

printf 'What is the copyright name to appear on the license? '
read AUTHOR


DIR=$APP/src/$APP

echo 'Creating directory structure'
mkdir -p $DIR

echo 'Creating README'
echo "# $APP" > $DIR/README.md


read -r -d '' MAKEFILE << EOM
.PHONY: setup test

default: test

setup:
    go get -t ./...
    go get github.com/smartystreets/goconvey
    go get github.com/mailgun/godebug

test:
    go test -timeout=60s ./...
EOM
echo 'Creating Makefile'
echo "$MAKEFILE" > $DIR/Makefile


read -d '' TMUX << EOM
#!/usr/bin/env bash
set -e

session=$APP

function sourceDevEnv {
    tmux send-keys -t \$1 "source dev.env" C-m
}

if ! tmux ls | grep -q "\$session"; then
    tmux new-session -d -s \$session

    tmux rename-window vim
    tmux split-window -v

    sourceDevEnv \$session:1.1
    tmux send-keys -t \$session:1.1 "vim" C-m

    sourceDevEnv \$session:1.2
    tmux resize-pane -t \$session:1.2 -D 20

    tmux new-window -n "convey"
    sourceDevEnv \$session:2
    tmux send-keys -t \$session:2 "goconvey" C-m
    open http://localhost:8080
fi

tmux select-window -t \$session:1
tmux select-pane -L
exec tmux attach-session -d -t \$session
EOM
echo 'Creating tmux script'
echo "$TMUX" > $DIR/tmux
chmod 755 $DIR/tmux


read -d '' DEVENV << EOM
#!/usr/bin/env bash

# Enables simple project based workflow
# Usage:
# 1. Ensure you have project dir inside a 'src' directory to comply with GOPATH
# 2. 'source dev.env' for new terminal sessions
# 3. Set env variables at will


# Prereqs - warn if dependencies not installed or project structure incorrect
# ----------------------------------------------------------------------------------
which go > /dev/null || echo 'error: `go` not found, is it installed?'

if [ \$(basename \$(dirname \$PWD)) != 'src' ]; then
    echo "error: project structure invalid; parent dir must be 'src'"
fi


# Do not change
export GOPATH=\$(dirname \$(dirname \$PWD))


# Utility functions
# ----------------------------------------------------------------------------------
function safePrefixPATH {
    # conditionally update the PATH environment variable - don't
    # update PATH if it already contains the path being passed in.
    if [[ ! ":\$PATH:" == *":\$1:"* ]]; then
        export PATH=\$1:\$PATH;
    fi
}

safePrefixPATH \$GOPATH/bin

# Set custom env variables here:
# ----------------------------------------------------------------------------------
export DEBUG=true

EOM
echo 'Creating dev.env'
echo "$DEVENV" > $DIR/dev.env


CURRENT_YEAR=$(date +"%Y")

read -r -d '' LICENSE << EOM
MIT license

The MIT License (MIT)

Copyright (c) $CURRENT_YEAR $AUTHOR

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.    
EOM
echo 'Creating license'
echo "$LICENSE" > $DIR/LICENSE

echo 'Running make setup'
make $DIR/setup


echo 'Initializing git'
cd $DIR && git init
cd $DIR && git add .
cd $DIR && git commit -m 'Initial commit'

echo 'Installing git hooks'
# TODO


echo 'Setup complete!'
echo "Run $DIR/tmux for default workspace"
